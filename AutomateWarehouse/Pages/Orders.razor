@page "/allOrders"
@using AutomateWarehouse.Data
@*@inject OrderRepository orderRepo
@inject OrderLineRepository orderLineRepo
@inject ProductRepository productRepo
@inject CustomerRepository customerRepo*@
@inject IOrderRepository orderRepo
@inject IOrderLineRepository orderLineRepo
@inject IProductRepository productRepo
@inject ICustomerRepository customerRepo


<h3>All orders</h3>

<div class="container">

    <table class="table table-bordered">
        <thead class="thead-dark">
            <tr>
                <th>Customer id</th>
                <th>Order date</th>
                <th>Delivery address</th>
                <th>Payment completed</th>
                <th>Order dispatched</th>
                <th>Order lines</th>
                <th>Edit order</th>
                <th>Pay order</th>
            </tr>
        </thead>
        <tbody>
            @if (orders.Any())
            {
                @foreach (var order in orders)
                {
                    <tr>
                        <td>@order.CustomerId</td>
                        <td>@order.OrderDate</td>
                        <td>@order.DeliveryAddress</td>
                        <td>@order.PaymentCompleted</td>
                        <td>@order.Dispatched</td>
                        <td><button class="btn btn-info" @onclick="(() => ShowAllOrderLines(order))">Show order lines</button></td>
                        <td><button class="btn btn-info">Edit</button></td>
                        <td>
                            <input type="checkbox" onchange="document.getElementById('PayButton').disabled = !this.checked;" />
                            <input type="button" name="PayButton" class="btn btn-info" id="PayButton" value="PayButton" disabled @onclick="(() => PayOrderAsync(order))" />
                        </td>
                    </tr>

                    <tr>
                        @if (orderLines != null)
                        {

                            @if (orderLines.Any())
                            {
                                <td colspan="8">
                                    @foreach (var orderLine in orderLines)
                                    {
                                        @if (order.Id == orderLine.OrderId)
                                        {
                                            <p>Order lines</p>
                                            <table class="table table-bordered">

                                                <thead class="thead-dark">
                                                    <tr>
                                                        <th>Order line Id</th>
                                                        <th>Product Id</th>
                                                        <th>Product name</th>
                                                        <th>Quantity</th>
                                                        <th>Order Id</th>
                                                        <th>Customer name</th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    <tr>
                                                        <td>@orderLine.Id</td>
                                                        <td>@orderLine.ProductId</td>
                                                        <td>@orderLine.Product.Name</td>
                                                        <td>@orderLine.Quantity</td>
                                                        <td>@orderLine.OrderId</td>
                                                        <td>@orderLine.Order.Customer.Name</td>
                                                    </tr>
                                                </tbody>
                                            </table>
                                        }
                                    }
                                </td>
                            }
                            else if (currentOrder.Id == order.Id)
                            {
                                <td colspan="8" align="center">
                                    <p>No order lines found</p>
                                </td>
                            }
                        }
                    </tr>
                }
            }
        </tbody>
    </table>

    <button class="btn btn-info" @onclick="(() => GetAllDispatchedOrdersAsync())">Show all dispatched orders</button>

    <button class="btn btn-info" @onclick="(() => GetAllPendingdOrdersAsync())">Show all pending orders</button>

    <button class="btn btn-info">Process all orders</button>
</div>


<div class="row m-5">
    <div class="col-5 bg-light m-2 justify-content-start">
        <div class="p-3 mb-3 bg-primary text-white text-center">
            Add new Order
        </div>
        <EditForm Model="@newOrder" OnValidSubmit="@AddNewOrder">
            <DataAnnotationsValidator />
            <ValidationSummary />
            <div class="form-group">
                @*Binder respektive värde nedanför till objektet newOrder*@
                <select type="text" id="dept" class="form-control custom-select picker">
                    <option value="">Customer</option>
                    <option value="1">Book title</option>
                </select>
                <br>
                <label for="name">Address</label>
                <input type="type" id="Address" class="form-control" @*@bind-value="@newOrder.Address" *@ />
                <br>
                <select type="text" id="dept" class="form-control custom-select picker">
                    <option value="">Product</option>
                    <option value="1">Book title</option>
                </select>
                <br>
                <button class="btn btn-info"> + </button>
                <button class="btn btn-info"> - </button>
                <br>
                <div class="text-center p-3 mb-3">
                    <button class="btn btn-info" type="submit">Add Order</button>
                </div>
            </div>
        </EditForm>
    </div>
</div>

<div class="row m-5">
    <div class="col-5 bg-light m-2 justify-content-start">
        <div class="p-3 mb-3 bg-primary text-white text-center">
            Edit Order
        </div>
        <EditForm Model="@updateOrder" OnValidSubmit="(() => EditOrder())">
            <DataAnnotationsValidator />
            <ValidationSummary />
            <div class="form-group">
                @*Binder respektive värde nedanför till objektet updateOrder*@
                <label for="name">Name</label>
                <input type="type" id="name" class="form-control" @*@bind-value="@newOrder.Name" *@ />
            </div>

            <div class="text-center p-3 mb-3">
                <button class="btn btn-info" type="submit">Edit Order</button>
            </div>
        </EditForm>
    </div>
</div>









@*<div class="container">
        @if (ordersDispatched.Any())
        {
            <table class="table table-bordered">
                <thead class="thead-dark">
                    <tr>
                        <th>Customer id</th>
                        <th>Order date</th>
                        <th>Delivery address</th>
                        <th>Payment completed</th>
                        <th>Order dispatched</th>
                        <th>Edit order</th>
                        <th>Pay order</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var orde in ordersDispatched)
                    {
                        <tr>
                            <td>@orde.CustomerId</td>
                            <td>@orde.OrderDate</td>
                            <td>@orde.DeliveryAddress</td>
                            <td>@orde.PaymentCompleted</td>
                            <td>@orde.Dispatched</td>
                            <td><button class="btn btn-info">Edit</button></td>
                            <td>
                                <input type="checkbox" onchange="document.getElementById('PayButton').disabled = !this.checked;" />
                                <input type="button" name="PayButton" class="btn btn-info" id="PayButton" value="PayButton" disabled @onclick="(() => PayOrderAsync(orde))" />
                            </td>
                        </tr>
                    }
                    }
                </tbody>
            </table>
        }
    </div>*@

@*<div class="container">
        @if (ordersPending.Any())
        {
            <table class="table table-bordered">
                <thead class="thead-dark">
                    <tr>
                        <th>Customer id</th>
                        <th>Order date</th>
                        <th>Delivery address</th>
                        <th>Payment completed</th>
                        <th>Order dispatched</th>
                        <th>Edit order</th>
                        <th>Pay order</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var orde in ordersPending)
                    {
                        <tr>
                            <td>@orde.CustomerId</td>
                            <td>@orde.OrderDate</td>
                            <td>@orde.DeliveryAddress</td>
                            <td>@orde.PaymentCompleted</td>
                            <td>@orde.Dispatched</td>
                            <td><button class="btn btn-info">Edit</button></td>
                            <td>
                                <input type="checkbox" onchange="document.getElementById('PayButton').disabled = !this.checked;" />
                                <input type="button" name="PayButton" class="btn btn-info" id="PayButton" value="PayButton" disabled @onclick="(() => PayOrderAsync(orde))" />
                            </td>
                        </tr>
                    }

                </tbody>
            </table>
        }
    </div>*@



@code {
    private List<Order> orders;
    private List<Order> ordersDispatched = new List<Order>();
    private List<Order> ordersPending = new List<Order>();

    private Order currentOrder = new Order();
    private List<OrderLine> orderLines;
    private List<Product> ListOfProducts;
    private List<Customer> ListOfCustomers;

    Order newOrder = new Order();
    Order updateOrder = new Order();
    bool checkedValue = false;

    protected override async Task OnInitializedAsync()
    {
        orders = await orderRepo.GetAllOrdersAsync();
    }

    private async Task AddNewOrder()
    {
        await orderRepo.AddNewOrderAsync(newOrder);
        await UpdateGUI();
    }

    private async Task EditOrder()
    {

    }


    private async Task PayOrderAsync(Order order)
    {
        await orderRepo.PayOrderAsync(order);
        await UpdateGUI();
    }

    private async Task GetAllDispatchedOrdersAsync()
    {
        ordersDispatched = await orderRepo.GetAllDispatchedOrdersAsync();
    }

    private async Task GetAllPendingdOrdersAsync()
    {
        ordersPending = await orderRepo.GetAllPendingOrdersAsync();
    }

    protected async Task UpdateGUI()
    {
        orders = await orderRepo.GetAllOrdersAsync();
    }


    private async Task ShowAllOrderLines(Order selectedOrder)
    {
        currentOrder = selectedOrder;
        orderLines = await orderLineRepo.GetCurrentOrderLinesAsync(currentOrder);
        ListOfProducts = await productRepo.GetAllProductsAsync();
        ListOfCustomers = await customerRepo.GetCustomerAsync();
        //await UpdateGUI();
    }


}
